{
  "title": "The iterated sum of digits is the same as a number mod nine in base 10.",
  "date": "20230305",
  "sections": [
    {
      "header": "Iterated sum of digits",
      "content": "<p>I kind of like the term collapsed sum of digits because it illustrates the concept better in my head. But anyway.</p><p>Take the number 26. The sum of digits is 8. That's 2+6=8. Now take the number 47. The sum of digits is 11. That's 4+7=11. So the idea is if you get a number that's greater than 9, you do the thing again. This continues until you get a number between 1 and 9 inclusive. Hence, iterative. So, the iterated sum of digits of 47 is 2. That's 4+7=11, 1+1=2. The iterated sum of digits of 4873 is 4. That's 4+8+7+3=22. 2+2=4.</p><p>Another way to look at it is to go two digits at a time. I would go right to left. So (3, 7) :: 1; (1, 8) :: 9; (9, 4) :: 4. That way you are only ever doing two digits at a time.</p>",
      "startshidden": false
    },
    {
      "header": "Mod nine",
      "content": "<p>Modulo is the remainder of division. So 11 mod 4 is 3 because 11/4 = 2 + 3/4, where 3 is the remainder of division. Mod nine would be the remainder after division 9. 11 mod 9 is 2 because 11/9 = 1 + 2/9. Hopefully that makes sense, speaking to the void that is the reader.</p><p>Notice also, modulo is kind of distributive. (8 + 5) mod 3 = (8 mod 3 + 5 mod 3) mod 3. (13 mod 3) = (2 + 2) mod 3. 1 = 4 mod 3. 1 = 1. Checks out? I call that an engineering proof. I only minored in math ;)</p><p>And it's also distributish over multiplication (8 * 5) mod 3 = ((8 mod 3) * (5 mod 3)) mod 3 = (2 * 2) mod 3 = 4 mod 3 = 1. And (8 * 5) mod 3 = 40 mod 3 = 1.</p>",
      "startshidden": false
    },
    {
      "header": "What's the title?",
      "content": "<p>Ok so 11 mod 9 is 2. The collapsed sum of digits of 11 is also 2. Also notice, the collapsed sum of digits of 94 is 4. (9, 4) :: 13 :: (1, 3) :: 4. Remember the weird distribution thing? 94 mod 9 = (90 + 4) mod 9 = (90 mod 9 + 4 mod 9) mod 9 = (4 mod 9) mod 9 = 4. And we can always get rid of trailing zeros because 10 mod 9 is 1, and modulo distributes over multiplication. So 40 mod 9 = (10 * 4) mod 9 = ((10 mod 9) * (4 mod 9)) mod 9 = (1 * 4) mod 9 = 4 mod 9 = 4. Right void?</p><p>But that's why the iterated sum of digits is the same as the number mod nine, excepting that the iterated sum of digits would return 9 where that number mod 9 would return 0. But, close enough.</p>",
      "startshidden": false
    }
  ]
}